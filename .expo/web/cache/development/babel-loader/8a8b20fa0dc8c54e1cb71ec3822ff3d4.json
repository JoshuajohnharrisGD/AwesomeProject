{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\dev\\\\project\\\\AwesomeProject\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      players: [{\n        name: \" Player 1 \",\n        runner: true\n      }, {\n        name: \" Player 2 \",\n        runner: false\n      }, {\n        name: \" Player 3\",\n        runner: false\n      }, {\n        name: \" Player 4 \",\n        runner: true\n      }, {\n        name: \" Player 5 \",\n        runner: false\n      }, {\n        name: \" Player 6\",\n        runner: false\n      }, {\n        name: \" Player 7\",\n        runner: false\n      }, {\n        name: \" Player 8\",\n        runner: false\n      }, {\n        name: \" Player 9\",\n        runner: true\n      }, {\n        name: \" Player 10\",\n        runner: false\n      }, {\n        name: \" Player 11\",\n        runner: false\n      }, {\n        name: \" Player 12\",\n        runner: true\n      }],\n      totalRunners: 0,\n      totalChasers: 0\n    };\n\n    _this.togglePlayer = function (index) {\n      var newArray = _toConsumableArray(_this.state.players);\n\n      if (newArray[index].runner) {\n        newArray[index].runner = false;\n      } else {\n        newArray[index].runner = true;\n      }\n\n      var totalRunners = 0;\n      var totalChasers = 0;\n      newArray.forEach(function (player) {\n        if (player.runner) totalRunners = totalRunners + 1;else totalChasers = totalChasers + 1;\n      });\n\n      _this.setState({\n        players: newArray,\n        totalChasers: totalChasers,\n        totalRunners: totalRunners\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var textStyle = {\n        color: 'black',\n        fontSize: 20,\n        fontWeight: 'bold'\n      };\n      var playerRows = this.state.players.map(function (player, index) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }\n        }, React.createElement(Text, {\n          key: index,\n          style: textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        }, player.name), player.runner && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.togglePlayer(index);\n          },\n          style: {\n            position: 'absolute',\n            right: 0,\n            top: 6\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, \"Runner\")), !player.runner && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.togglePlayer(index);\n          },\n          style: {\n            position: 'absolute',\n            right: 0,\n            top: 6,\n            backgroundColor: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }, \"Chaser \")));\n      });\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: 'Black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, \"Allocate your players\"), React.createElement(ScrollView, {\n        style: {\n          maxHeight: 180,\n          backgroundColor: 'white',\n          width: '49%',\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, playerRows), React.createElement(Text, {\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, \"Total runners: \", this.state.totalRunners), React.createElement(Text, {\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, \"Total chasers: \", this.state.totalChasers), React.createElement(\"view\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        title: \"Start Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        title: \"Cancel Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/dev/project/AwesomeProject/App.js"],"names":["React","Component","Stylesheet","App","state","players","name","runner","totalRunners","totalChasers","togglePlayer","index","newArray","forEach","player","setState","textStyle","color","fontSize","fontWeight","playerRows","map","flexDirection","width","position","right","top","textAlign","backgroundColor","flex","justifyContent","alignItems","maxHeight","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, Button, ScrollView, Stylesheet, TouchableOpacity } from 'react-native';\n\n\n\n\n\n\nclass App extends Component {\n  state = {\n\n    players: [\n\n      { name: \" Player 1 \", runner: true },\n      { name: \" Player 2 \", runner: false },\n      { name: \" Player 3\", runner: false },\n      { name: \" Player 4 \", runner: true },\n      { name: \" Player 5 \", runner: false },\n      { name: \" Player 6\", runner: false },\n      { name: \" Player 7\", runner: false },\n      { name: \" Player 8\", runner: false },\n      { name: \" Player 9\", runner: true },\n      { name: \" Player 10\", runner: false },\n      { name: \" Player 11\", runner: false },\n      { name: \" Player 12\", runner: true },\n    ],\n\n\n\n    totalRunners: 0,\n    totalChasers: 0\n\n  }\n\n  togglePlayer = (index) => {\n    let newArray = [...this.state.players];\n    if (newArray[index].runner) {\n      newArray[index].runner = false\n\n    } else {\n      newArray[index].runner = true\n\n    }\n    let totalRunners = 0\n    let totalChasers = 0\n    newArray.forEach(player => { if (player.runner) totalRunners = totalRunners + 1; else totalChasers = totalChasers + 1 })\n    this.setState({\n      players: newArray,\n      totalChasers: totalChasers,\n      totalRunners: totalRunners,\n\n\n    })\n  }\n  render() {\n    const textStyle = {\n      color: 'black',\n      fontSize: 20,\n      fontWeight: 'bold'\n\n\n    }\n    const playerRows = this.state.players.map((player, index) => (\n      <View style={{ flexDirection: 'row', width: '100%' }}>\n        <Text key={index} style={textStyle}>{player.name}</Text>\n\n        {player.runner &&\n\n          <TouchableOpacity onPress={() => this.togglePlayer(index)} style = {{position: 'absolute', right:0, top: 6}} >\n\n            <Text style = {{textAlign: 'right'}}>Runner</Text>\n          </TouchableOpacity>\n\n        }\n        {!player.runner &&\n\n          <TouchableOpacity onPress={() => this.togglePlayer(index)} style = {{position: 'absolute', right:0, top: 6, backgroundColor: 'white'}}   >\n\n            <Text style = {{textAlign: 'right'}}>Chaser </Text>\n          </TouchableOpacity>\n\n        }\n      </View>\n    ))\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: 'Black'\n        }}>\n        <Text style={textStyle}>Allocate your players</Text>\n        <ScrollView style={{\n          maxHeight: 180,\n          backgroundColor: 'white',\n          width: '49%',\n          padding: 5\n\n        }}>\n          {playerRows}\n        </ScrollView>\n        <Text style={textStyle}>Total runners: {this.state.totalRunners}</Text>\n        <Text style={textStyle}>Total chasers: {this.state.totalChasers}</Text>\n\n        <view>\n          <Button title=\"Start Game\"></Button>\n          <Button title=\"Cancel Game\"></Button>\n\n          \n\n        </view>\n      </View>\n\n\n\n\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}